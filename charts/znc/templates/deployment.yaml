apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: "copy-config"
        image: "busybox:latest"
        command: [
            "/bin/sh",
            "-ec",
            "mkdir /znc-data/configs && cp /znc-data-configs-ro/znc.conf /znc-data/configs"
        ]
        volumeMounts:
        - name: config-ro
          mountPath: /znc-data-configs-ro
        - name: data
          mountPath: /znc-data
      affinity:
        # TODO: to be implemented
        # nodeAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     nodeSelectorTerms:
        #     - matchExpressions:
        #       - key: {{ .Values.nodeAffinity.key }}
        #         operator: In
        #         values:
        #         - {{ .Values.nodeAffinity.value }}
      containers:
      - name: {{ template "name" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        ports:
        - containerPort: 6697
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: config-ro
          mountPath: /znc-data-configs-ro
        - name: data
          mountPath: /znc-data
      volumes:
{{- if .Values.persistence.enabled }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "name" .) }}
{{- else }}
      - name: data
        emptyDir: {}
      - name: config-ro
        configMap:
          name: {{ template "name" . }}
{{- end -}}
